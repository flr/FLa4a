% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/a4aFit-class.R, R/a4aFits-class.R,
%   R/a4aFitCatchDiagn-class.R
\docType{class}
\name{a4aFit-class}
\alias{a4aFit-class}
\alias{a4aFit}
\alias{a4aFit-methods}
\alias{clock}
\alias{clock-methods}
\alias{clock,a4aFit-method}
\alias{fitSumm}
\alias{fitSumm-methods}
\alias{fitSumm,a4aFit-method}
\alias{stock.n,a4aFit-method}
\alias{harvest,a4aFit,ANY-method}
\alias{catch.n,a4aFit-method}
\alias{index,a4aFit-method}
\alias{show,a4aFit-method}
\alias{logLik,a4aFit-method}
\alias{iter,a4aFit-method}
\alias{window,a4aFit-method}
\alias{a4aFits-class}
\alias{a4aFits}
\alias{a4aFits-methods}
\alias{a4aFits,list-method}
\alias{a4aFits,a4aFit-method}
\alias{a4aFits,missing-method}
\alias{computeCatchDiagnostics,a4aFit-method}
\title{S4 class \code{a4aFit}}
\usage{
a4aFit(...)

a4aFit(...)

clock(object, ...)

\S4method{clock}{a4aFit}(object)

fitSumm(object, ...)

\S4method{fitSumm}{a4aFit}(object)

\S4method{stock.n}{a4aFit}(object)

\S4method{harvest}{a4aFit,ANY}(object)

\S4method{catch.n}{a4aFit}(object)

\S4method{index}{a4aFit}(object)

\S4method{show}{a4aFit}(object)

\S4method{logLik}{a4aFit}(object, ...)

\S4method{iter}{a4aFit}(obj, it)

\S4method{window}{a4aFit}(
  x,
  start = dims(x)$minyear,
  end = dims(x)$maxyear,
  extend = TRUE,
  frequency = 1
)

a4aFits(object, ...)

\S4method{a4aFits}{list}(object, ...)

\S4method{a4aFits}{a4aFit}(object, ...)

\S4method{a4aFits}{missing}(object, ...)

\S4method{computeCatchDiagnostics}{a4aFit}(object, stock, ...)
}
\arguments{
\item{...}{additional argument list that might never be used}

\item{object}{object of relevant class (see signature of method)}

\item{obj}{the object to be subset}

\item{it}{iteration to be extracted}

\item{x}{the object to be subset}

\item{start}{initial year}

\item{end}{final year}

\item{extend}{if object is shorter than end-start extend to cover year range}

\item{frequency}{interval between years if extended}
}
\description{
The \code{a4aFit} class was built to store the a4a stock assessment fits.
}
\section{Slots}{

\describe{
   \item{call}{The function call}
   \item{clock}{Information on call duration}
   \item{fitSumm}{Fit summary}
   \item{stock.n}{Estimates of stock numbers-at-age}
   \item{harvest}{Estimates of fishing mortality at age}
   \item{catch.n}{Estimates of catch numbers-at-age}
   \item{index}{Estimates of survey or CPUE indices-at-age}
 }
}

\section{Accessors}{

All slots in the class have accessor and replacement methods defined that
allow retrieving and substituting individual slots.

The values passed for replacement need to be of the class of that slot.
A numeric vector can also be used when replacing FLQuant slots, and the
vector will be used to substitute the values in the slot, but not its other
attributes.
}

\section{Constructor}{

A construction method exists for this class that can take named arguments for
any of its slots. All slots are then created to match the requirements of the
class validity. If an unnamed \code{FLQuant} object is provided, this is used
for sizing, but not for populating any slot.
}

\examples{
data(ple4)
data(ple4.index)

obj <- sca(stock=ple4, indices=FLIndices(ple4.index))
obj

slotNames(obj)
clock(obj)
fitSumm(obj)

flq <- stock.n(obj)
is(flq)
flq <- index(obj)
is(flq)

logLik(obj)
AIC(obj)
BIC(obj)
}
